directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @extends on OBJECT | INTERFACE

directive @external(reason: String) on OBJECT | FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!

  """Get all users query"""
  users: [User]

  """Get a user query"""
  user(input: GetUserByIdInput): User!
}

"""A user of the application"""
type User {
  """ID of the user"""
  id: ID!

  """Name of the user"""
  name: String

  """Unique email address of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

"""Get user by ID input"""
input GetUserByIdInput {
  """User ID"""
  id: ID!
}

"""Create user input"""
input CreateUserInput {
  """User name"""
  name: String!

  """Email address"""
  email: String!

  """User password"""
  password: String!
}

"""Modify user input"""
input ModifyUserInput {
  """User ID"""
  id: ID!

  """User name"""
  name: String

  """Email address"""
  email: String

  """User password"""
  password: String
}

"""Delete user input"""
input DeleteUserInput {
  """User ID"""
  id: ID!
}

scalar _FieldSet

scalar _Any

type _Service {
  sdl: String
}

union _Entity = User

type Mutation {
  """Create user"""
  createUser(input: CreateUserInput): User

  """Modify user"""
  modifyUser(input: ModifyUserInput): User

  """Delete user"""
  deleteUser(input: DeleteUserInput): User
}